version: '3.6'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    container_name: elasticsearch
    secrets:
      - source: elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    ports: ['9200:9200']
    networks: ['stack']
    healthcheck:
      test: curl -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.0.1
    container_name: kibana
    secrets:
      - source: kibana.yml
        target: /usr/share/kibana/config/kibana.yml
    ports: ['5601:5601']
    networks: ['stack']
    healthcheck:
      test: curl -s https://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:7.0.1
    container_name: logstash
    secrets:
      - source: logstash.yml
        target: /usr/share/logstash/config/logstash.yml
    ports: ['5044:5044']
    networks: ['stack']
    volumes:
      - './logstash/conf:/usr/share/logstash/pipeline'
    command: logstash -f /usr/share/logstash/pipeline/custom-logstash.conf
    healthcheck:
      test: bin/logstash -t
      interval: 60s
      timeout: 50s
      retries: 5

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.0.1
    container_name: metricbeat
    volumes:
       - /proc:/hostfs/proc:ro
       - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
       - /:/hostfs:ro
    command: metricbeat --strict.perms=false -e
    secrets:
      - source: metricbeat.yml
        target: /usr/share/metricbeat/metricbeat.yml
    networks: ['stack']
    healthcheck:
      test: metricbeat test config
      interval: 30s
      timeout: 15s
      retries: 5

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.0.1
    container_name: filebeat
    command: filebeat --strict.perms=false -e
    secrets:
      - source: filebeat.yml
        target: /usr/share/filebeat/filebeat.yml
    volumes:
      - './servicemock/logs:/var/log'
    networks: ['stack']
    healthcheck:
      test: filebeat test config
      interval: 30s
      timeout: 15s
      retries: 5

  servicemock:
    image: damianmcdonald/servicemock:1.1.0
    environment:
     - SERVICEMOCK_LOGS=/app/logs
     - SERVICEMOCK_NAME=servicemock
    volumes:
      - './servicemock/logs:/app/logs'
      - './servicemock/conf:/app/config'
    healthcheck:
      test: if ps -a | grep [s]ervicemock-1.0.3.jar ; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  elasticalert:
    image: damianmcdonald/elasticalert:1.0.0
    container_name: elasticalert
    environment:
     - ELASTICSEARCH_HOST=localhost
     - ELASTICSEARCH_PORT=9200
    volumes:
      - './elasticalert/conf:/app/config'
    network_mode: "host"
    healthcheck:
      test: if ps -aux | grep elastalert ; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

networks: {stack: {}}

secrets:
  elasticsearch.yml:
    file: ./elasticsearch/conf/elasticsearch.yml
  kibana.yml:
    file: ./kibana/conf/kibana.yml
  logstash.yml:
    file: ./logstash/conf/logstash.yml
  metricbeat.yml:
    file: ./metricbeat/conf/metricbeat.yml
  filebeat.yml:
    file: ./filebeat/conf/filebeat.yml
